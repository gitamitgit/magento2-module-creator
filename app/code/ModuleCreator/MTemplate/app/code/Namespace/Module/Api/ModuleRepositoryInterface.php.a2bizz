<?php
/**
 * Copyright Â©  All rights reserved.
 * See COPYING.txt for license details.
 */
declare(strict_types=1);

namespace <Namespace>\<Module>\Api;

use Magento\Framework\Api\SearchCriteriaInterface;

interface <Module>RepositoryInterface
{

    /**
     * Save <Module>
     * @param \<Namespace>\<Module>\Api\Data\<Module>Interface $<module>
     * @return \<Namespace>\<Module>\Api\Data\<Module>Interface
     * @throws \Magento\Framework\Exception\LocalizedException
     */
    public function save(
        \<Namespace>\<Module>\Api\Data\<Module>Interface $<module>
    );

    /**
     * Retrieve <Module>
     * @param string $<module>Id
     * @return \<Namespace>\<Module>\Api\Data\<Module>Interface
     * @throws \Magento\Framework\Exception\LocalizedException
     */
    public function get($<module>Id);

    /**
     * Retrieve <Module> matching the specified criteria.
     * @param \Magento\Framework\Api\SearchCriteriaInterface $searchCriteria
     * @return \<Namespace>\<Module>\Api\Data\<Module>SearchResultsInterface
     * @throws \Magento\Framework\Exception\LocalizedException
     */
    public function getList(
        \Magento\Framework\Api\SearchCriteriaInterface $searchCriteria
    );

    /**
     * Delete <Module>
     * @param \<Namespace>\<Module>\Api\Data\<Module>Interface $<module>
     * @return bool true on success
     * @throws \Magento\Framework\Exception\LocalizedException
     */
    public function delete(
        \<Namespace>\<Module>\Api\Data\<Module>Interface $<module>
    );

    /**
     * Delete <Module> by ID
     * @param string $<module>Id
     * @return bool true on success
     * @throws \Magento\Framework\Exception\NoSuchEntityException
     * @throws \Magento\Framework\Exception\LocalizedException
     */
    public function deleteById($<module>Id);
}

